{"version":3,"sources":["components/Draggable.tsx","components/draggable-items/ActionHandler.tsx","reducers/board.reducer.tsx","contexts/board.context.tsx","components/board/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Draggable","props","x","y","useState","isDragging","setIsDragging","pos","setPos","ref","useRef","boxRef","onMouseMove","e","current","p","getBoundingClientRect","parent","parentElement","d","mX","movementX","mY","movementY","stopPropagation","preventDefault","onMouseUp","onMouseDown","button","useEffect","addEventListener","removeEventListener","document","useDragging","onDrag","className","id","style","left","top","zIndex","zIndexOndrag","width","title","children","ActionHandler","color","marginRight","attributes","map","onClick","type","onAttributeClick","text","boardReducer","state","action","payload","connectedTo","hasOwnProperty","newState","localStorage","setItem","JSON","stringify","console","log","initialState","BoardContext","createContext","dispatch","BoardContextProvider","useReducer","Provider","value","Board","useContext","xmlns","Object","entries","filter","key","points","midPoint","fill","stroke","strokeWidth","_line","App","lines","setLines","event","rect","target","editorConfig","height","window","innerHeight","innerWidth","overlay","setOverlay","editor","setEditor","selectedItem","setSelectedItem","gridRef","React","zoom","tap","offset","ev","diff","pageX","pageY","transform","onScroll","deltaY","position","attribute","elements","getElementById","querySelectorAll","board","forEach","handleOnDrag","display","listStyle","margin","padding","placeholder","bottom","right","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.347187fd.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\n\nimport './Draggable.css'\n\ninterface Props {\n    id?: string\n    className?: string\n    zIndex?: number\n    zIndexOndrag?: number\n    title: string | React.ReactNode\n    onDrag?: () => void\n    x?: number\n    y?: number\n}\n\n\nfunction useDragging({x, y}: {x: number, y: number}) {\n    const [isDragging, setIsDragging] = useState(false);\n    const [pos, setPos] = useState<{x: number, y: number}>({ x: x, y: y });\n    const ref = useRef<HTMLDivElement>(null);\n    const boxRef = useRef<HTMLDivElement>(null);\n\n    function onMouseMove(e: any) {\n      if (!isDragging) return;\n      if(boxRef.current) {\n        let p = boxRef.current.getBoundingClientRect();\n        let parent = boxRef.current.parentElement?.getBoundingClientRect() || {x: 0, y: 0};\n        // console.log(p, e.movementX, e.movementY);\n        let d = {\n            x: p.x - parent.x,\n            y: p.y - parent.y,\n            mX: e.movementX,\n            mY: e.movementY,\n        }\n        setPos({\n            x: d.x + e.movementX,\n            y: d.y + e.movementY,\n        });\n      }\n      \n      e.stopPropagation();\n      e.preventDefault();\n    }\n  \n    function onMouseUp(e: any) {\n      setIsDragging(false);\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  \n    function onMouseDown(e: any) {\n      if (e.button !== 0) return;\n      setIsDragging(true);\n\n    //   if(ref.current){\n    //     setPos({\n    //         x: e.x - ref.current.offsetWidth / 2,\n    //         y: e.y - ref.current.offsetHeight / 2,\n    //       });\n    //   }\n      \n      e.stopPropagation();\n      e.preventDefault();\n    }\n  \n    // When the element mounts, attach an mousedown listener\n    useEffect(() => {\n      ref.current?.addEventListener(\"mousedown\", onMouseDown);\n  \n      return () => {\n        ref?.current?.removeEventListener(\"mousedown\", onMouseDown);\n      };\n    }, [ref]);\n  \n    // Everytime the isDragging state changes, assign or remove\n    // the corresponding mousemove and mouseup handlers\n    useEffect(() => {\n      if (isDragging) {\n        document.addEventListener(\"mouseup\", onMouseUp);\n        document.addEventListener(\"mousemove\", onMouseMove);\n      } else {\n        document.removeEventListener(\"mouseup\", onMouseUp);\n        document.removeEventListener(\"mousemove\", onMouseMove);\n      }\n      return () => {\n        document.removeEventListener(\"mouseup\", onMouseUp);\n        document.removeEventListener(\"mousemove\", onMouseMove);\n      };\n    }, [isDragging]);\n  \n    return {boxRef, ref, pos, isDragging};\n  }\n\n\n\n\n\n\n\n\nconst Draggable: React.FC<Props> = props => {\n    \n    const {boxRef, ref, pos, isDragging} = useDragging({x: props.x||0, y: props.y||0})\n\n    useEffect(()=> {\n        if(props.onDrag)props.onDrag()\n    }, [pos])\n\n    return (\n        <article\n            className={`draggable ${props.className} ${isDragging?'dragging': ''}`} \n            id={props.id}\n            ref={boxRef}\n            style={{\n                left: pos.x,\n                top: pos.y,\n                zIndex: isDragging? props.zIndexOndrag: props.zIndex,\n                width: 'fit-content'\n            }}\n            >\n            <header ref={ref} className={`draggable-header ${isDragging?'dragging': ''}`}>\n                {props.title}\n            </header>\n            <section className={`draggable-content ${isDragging?'dragging': ''}`}>\n                {props.children}\n            </section>\n        </article>\n    );\n};\n\n\nexport default Draggable;","import {FaCircle, FaCode, FaDotCircle} from \"react-icons/fa\";\nimport Draggable from \"../Draggable\";\nimport React, {useEffect, useRef} from \"react\";\n\n\nimport './ActionHeader.css'\n\ninterface Props {\n    id: string\n    title: string\n    attributes: Array<{ type: string, text: string, id: string }>\n    onDrag?: () => any\n    onAttributeClick: (event:any, attribId: string) => any\n    x?: number\n    y?: number\n    onClick: (e: any, attribute: { type: string, text: string, id: string }) => any\n}\n\nconst ActionHandler: React.FC<Props> = (props) => {\n    return (\n        <Draggable id={props.id} zIndexOndrag={100} zIndex={10} className={'action-handler'} title={<><FaCode color={'orange'} style={{marginRight: '1rem'}} />{props.title}</>} onDrag={props.onDrag} x={props.x} y={props.y}>\n            <ul>\n                {\n                    props.attributes.map(x =>\n                        <li id={x.id} key={x.id} onClick={(e) => props.onClick(e, x)}>\n                            {\n                                x.type === 'input' ?\n                                    <>\n                                        <FaCircle className={'left'} type={'input-handle'} onClick={(e)=>props.onAttributeClick(e, x.id)}/>\n                                        <div>{x.text}</div>\n                                        <div></div>\n                                        </>\n                                    :\n                                    <>\n                                        <div></div>\n                                        <div>{x.text}</div>\n                                        <FaCircle className={'right'} type={'output-handle'} onClick={(e)=>props.onAttributeClick(e, x.id)}/>\n                                 </>\n                            }\n                        </li>\n                    )\n                }\n            </ul>\n        </Draggable>\n    )\n};\n\nexport default ActionHandler","import React from 'react'\n\nexport type Item = {\n    id: string\n    x: number\n    y: number\n    connectedTo?: string | null\n}\n\nexport type Action =\n    { type: 'add', payload: Item }\n    | { type: 'update', payload: Item }\n    | { type: 'remove', payload: Partial<Item> & {id: string} }\n    | { type: 'connect', payload: [string, string] }\n    | { type: 'disconnect', payload: [string, string] }\n    | { type: 'save-state', payload: 'localStorage' | 'project' }\n\nexport const boardReducer = (state: {[id: string]: Item}, action: Action): {[id: string]: Item} => {\n    switch (action.type) {\n        case \"add\":\n            return {...state, [action.payload.id]:{...action.payload, connectedTo: null}}\n\n        case \"update\":\n            if(!state.hasOwnProperty(action.payload.id)) return state\n            return {...state, [action.payload.id]:{...action.payload, connectedTo: state[action.payload.id].connectedTo}}\n\n        case \"remove\":\n            let newState = {...state};\n            delete newState[action.payload.id];\n            return newState\n\n        case \"save-state\":\n            localStorage.setItem('items', JSON.stringify(state))\n            console.log('state saved in local storage')\n            return state\n\n        default:\n            console.log('invalid action')\n    }\n    return state\n}\n\n","import React, {createContext, Dispatch, useReducer} from 'react'\nimport {Action, boardReducer} from \"../reducers/board.reducer\";\n\n\nconst initialState: Parameters<typeof boardReducer>[0] = {\n    'Signup.form.return': {\n        id: 'Signup.form.return',\n        x: 100,\n        y: 200,\n        connectedTo: 'signup.arg'\n    },\n    'signup.arg': {\n        id: 'signup.arg',\n        x: 312,\n        y: 23\n    },\n    'signup.return': {\n        id: 'signup.return',\n        x: 100,\n        y: 200,\n        connectedTo: 'Switch.arg'\n    },\n    'Switch.arg': {\n        id: 'Switch.arg',\n        x: 312,\n        y: 23,\n        connectedTo: null\n    },\n    'Switch.forward': {\n        id: 'Switch.forward',\n        x: 312,\n        y: 23,\n        connectedTo: 'GetToken.arg'\n    },\n    'GetToken.arg': {\n        id: 'GetToken.arg',\n        x: 312,\n        y: 23,\n        connectedTo: null\n    },\n    'Switch.error': {\n        id: 'Switch.error',\n        x: 312,\n        y: 23,\n        connectedTo: 'Transform.arg'\n    },\n    'Transform.arg': {\n        id: 'Transform.arg',\n        x: 312,\n        y: 23,\n        connectedTo: 'fourth'\n    },\n    'GetToken.return': {\n        id: 'GetToken.return',\n        x: 312,\n        y: 23,\n        connectedTo: 'Response.arg'\n    },\n    'Transform.return': {\n        id: 'Transform.return',\n        x: 312,\n        y: 23,\n        connectedTo: 'Response.arg'\n    },\n    'Response.arg': {\n        id: 'Response.arg',\n        x: 312,\n        y: 23\n    }\n}\n\nconst BoardContext = createContext<{\n    state: Parameters<typeof boardReducer>[0]\n    dispatch: Dispatch<Action>\n}>({\n    state: initialState,\n    dispatch: () => null\n})\n\n\nconst BoardContextProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(boardReducer,  initialState);\n\n    return (\n        <BoardContext.Provider value={{state, dispatch}}>\n            {children}\n        </BoardContext.Provider>\n    )\n}\n\n\nexport {BoardContextProvider, BoardContext}\n\n\n","import React, {useEffect, useReducer, useContext} from \"react\";\nimport {BoardContext} from '../../contexts/board.context'\nimport {prependListener} from \"cluster\";\n\ninterface Props {\n    style: {\n        width: string,\n        height: string\n    }\n}\n\nexport type Item = {\n    id: string\n    x: number\n    y: number\n}\n\n\nconst Board: React.FC<Props> = (props) => {\n    // const [state, dispatch] = useReducer(reducer, initialState);\n    const {state, dispatch} = useContext(BoardContext);\n\n    const _line = (points: [number, number, number, number], key: string) => {\n        let midPoint = (points[0] + points[2]) / 2\n        return <path\n            key={key}\n            d={`M${points[0]},${points[1]} C${midPoint},${points[1]} ${midPoint},${points[3]} ${points[2]},${points[3]}`}\n            fill={'transparent'} stroke={'green'} strokeWidth={3}/>\n    }\n\n    return (\n        <svg style={{...props.style}} xmlns=\"http://www.w3.org/2000/svg\">\n            {/*{*/}\n            {/*    Object.entries(state).map(([key,value]) => <circle key={key} cx={value.x} cy={value.y} r=\"5\" stroke=\"transparent\" strokeWidth=\"0\" fill=\"red\" />)*/}\n            {/*}*/}\n            {\n                Object.entries(state).filter(([x, y]) => y.connectedTo).map(([key, value]) => {\n                    if (!state[value.connectedTo || '']) return null\n                    let line: [number, number, number, number] = [value.x, value.y, state[value.connectedTo || '']?.x, state[value.connectedTo || '']?.y]\n\n                    return _line(line, key)\n                    //     return <path key={'line' + key}\n                    //                  d={`M ${line[0]} ${line[1]} Q ${(line[0] + line[2]) * 0.25} ${(line[1] + line[3]) * 0.5}, ${(line[0] + line[2]) * 0.5} ${(line[1] + line[3]) * 0.5} T ${line[2]} ${line[3]}`}\n                    //                  strokeWidth={3}\n                    //                  stroke=\"orange\" fill=\"transparent\"/>\n                })\n            }\n            {/*<path d=\"M100,250 C244,254 241,144 367,143\" fill={'transparent'} stroke={'green'} strokeWidth={3} />*/}\n            {/*<circle cx=\"50\" cy=\"50\" r=\"5\" stroke=\"transparent\" strokeWidth=\"0\" fill=\"red\" />*/}\n            {/*<path d=\"M 0 80 Q 45 100, 90 80 T 180 80\" stroke=\"orange\" fill=\"transparent\"/>*/}\n            {/*<path d=\"M 0 80 Q 45 100, 90 80 T 180 80\" stroke=\"orange\" fill=\"transparent\"/>*/}\n        </svg>\n    )\n}\n\nexport default Board\n","import React, {useContext, useState} from 'react';\nimport './App.css';\nimport ActionHandler from \"./components/draggable-items/ActionHandler\";\nimport Board from \"./components/board/Board\";\nimport {BoardContext} from \"./contexts/board.context\";\nimport {FaShare, FaReply} from \"react-icons/fa\";\n\ntype Subject = {\n    id: string\n    type: 'switch' | 'form' | 'closed' | 'action' | 'program'\n    text: string\n    attributes: Array<{ type: 'input' | 'output', text: string, id: string }>\n} & { pos?: { x: number, y: number }, icon?: string }\n\nfunction App() {\n\n    const [lines, setLines] = useState<Array<[number, number, number, number]>>([[0, 100, 180, 100]])\n    const programList: Array<Subject> = [\n        {\n            id: 'Signup.form',\n            type: 'form',\n            text: 'Signup Form',\n            attributes: [\n                {\n                    id: 'Signup.form.arg',\n                    text: 'Args',\n                    type: 'input'\n                },\n                {\n                    id: 'Signup.form.return',\n                    text: 'return',\n                    type: 'output'\n                }\n            ],\n            pos: {\n                x: 100,\n                y: 100\n            }\n        },\n        // {\n        //     id: 'login.switch',\n        //     type: 'switch',\n        //     text: 'Login Switch',\n        //     attributes: [\n        //         {\n        //             id: 'login.switch.arg',\n        //             text: 'Args',\n        //             type: 'input'\n        //         },\n        //         {\n        //             id: 'login.switch.401',\n        //             text: '401',\n        //             type: 'output'\n        //         },\n        //         {\n        //             id: 'login.switch.500',\n        //             text: 'Error',\n        //             type: 'output'\n        //         },\n        //     ]\n        // },\n        {\n            id: 'Signup',\n            type: 'program',\n            text: 'Signup',\n            attributes: [\n                {\n                    id: 'signup.arg',\n                    text: 'Args',\n                    type: 'input'\n                },\n                {\n                    id: 'signup.return',\n                    text: 'Return',\n                    type: 'output'\n                }\n            ],\n            pos: {\n                x: 300,\n                y: 200\n            }\n        },\n        {\n            id: 'Switch',\n            type: 'switch',\n            text: 'Switch',\n            attributes: [\n                {\n                    id: 'Switch.arg',\n                    text: 'Args',\n                    type: 'input'\n                },\n                {\n                    id: 'Switch.forward',\n                    text: 'Forward',\n                    type: 'output'\n                },\n                {\n                    id: 'Switch.error',\n                    text: 'Error',\n                    type: 'output'\n                }\n            ],\n            pos: {\n                x: 500,\n                y: 300\n            }\n        },\n        {\n            id: 'GetToken',\n            type: 'program',\n            text: 'GetToken',\n            attributes: [\n                {\n                    id: 'GetToken.arg',\n                    text: 'Args',\n                    type: 'input'\n                },\n                {\n                    id: 'GetToken.return',\n                    text: 'Token',\n                    type: 'output'\n                }\n            ],\n            pos: {\n                x: 800,\n                y: 200\n            }\n        },\n        {\n            id: 'Transform',\n            type: 'program',\n            text: 'Transform',\n            attributes: [\n                {\n                    id: 'Transform.arg',\n                    text: 'Args',\n                    type: 'input'\n                },\n                {\n                    id: 'Transform.return',\n                    text: 'Token',\n                    type: 'output'\n                }\n            ],\n            pos: {\n                x: 800,\n                y: 400\n            }\n        },\n        {\n            id: 'Response',\n            type: 'program',\n            text: 'Response',\n            attributes: [\n                {\n                    id: 'Response.arg',\n                    text: 'Args',\n                    type: 'input'\n                }\n            ],\n            pos: {\n                x: 1100,\n                y: 300\n            }\n        },\n\n    ]\n\n\n    const handleOnDrag = (id: string) => {\n        const elements = document.getElementById(id)?.querySelectorAll(`[type$=-handle]`)\n        const board = document.getElementById('board')?.getBoundingClientRect() || {x: 0, y: 0}\n\n        elements?.forEach(e => {\n            let rect = e.getBoundingClientRect()\n            dispatch({\n                type: \"update\",\n                payload: {\n                    id: e.parentElement?.id || 'undefined',\n                    x: rect.x - board.x + rect.width / 2,\n                    y: rect.y - board.y + rect.height / 2\n                }\n            })\n        })\n    }\n\n    const onAttributeClick = (event: any, id: string) => {\n        let rect = event.target.getBoundingClientRect()\n        setLines([[rect.x, rect.y, lines[0][2], lines[0][3]]])\n    }\n\n    const {state, dispatch} = useContext(BoardContext);\n\n    const editorConfig = {\n        height: `${window.innerHeight}px`,\n        width: `${window.innerWidth}px`,\n    }\n\n    const [overlay, setOverlay] = useState<boolean>(false)\n    const [editor, setEditor] = useState<boolean>(false)\n    const [selectedItem, setSelectedItem] = useState<Subject | null>(null)\n\n    const handleAttributeClick = (event: any, attribute: any, item: Subject) => {\n        setSelectedItem(item)\n        setOverlay(true)\n    }\n\n    const gridRef = React.useRef<HTMLDivElement>(null)\n    const zoom = React.useRef(1)\n    const tap = React.useRef({\n        x: 0,\n        y: 0\n    })\n    const offset = React.useRef({\n        x: 0,\n        y: 0\n    })\n\n    React.useEffect(() => {\n        if(!gridRef.current) return;\n\n        const onMouseMove = (ev: MouseEvent) => {\n            let diff = {\n                x: ev.pageX - tap.current.x,\n                y: ev.pageY - tap.current.y,\n            }\n            tap.current = {x: ev.pageX, y: ev.pageY}\n            offset.current = {x: offset.current.x + diff.x, y: offset.current.y + diff.y}\n\n            if(gridRef.current) gridRef.current.style.transform = `translate(${offset.current.x / zoom.current}px, ${offset.current.y / zoom.current}px)`\n        }\n\n        const onMouseUp = (ev: MouseEvent) => {\n            gridRef.current?.removeEventListener('mouseup', onMouseUp)\n            gridRef.current?.removeEventListener('mousemove', onMouseMove)\n        }\n\n        const preventDefault = (ev: Event) => {\n            ev.preventDefault()\n        }\n\n        const onMouseDown = (ev: MouseEvent) => {\n            tap.current = {\n                x: ev.pageX,\n                y: ev.pageY\n            }\n            gridRef.current?.addEventListener('mousemove', onMouseMove)\n            gridRef.current?.addEventListener('selectstart', preventDefault)\n            gridRef.current?.addEventListener('mouseup', onMouseUp)\n        }\n\n        const onScroll = (ev: WheelEvent) => {\n            if(ev.deltaY > 0) {\n                zoom.current = zoom.current * 0.9\n            }\n            if(ev.deltaY < 0) {\n                zoom.current = zoom.current * 1.1\n            }\n\n            if(gridRef.current) gridRef.current.style.zoom = `${zoom.current}`\n        }\n        \n        gridRef.current.addEventListener('mousedown', onMouseDown)\n        gridRef.current.addEventListener('wheel', onScroll)\n\n        return () => {\n            gridRef.current?.removeEventListener('mousedown', onMouseDown)\n            gridRef.current?.removeEventListener('mousemove', onMouseMove)\n            gridRef.current?.removeEventListener('mouseup', onMouseUp)\n            gridRef.current?.removeEventListener('selectstart', preventDefault)\n            gridRef.current?.removeEventListener('wheel', onScroll)\n        }\n    }, [gridRef])\n\n    return (\n        <>\n            <div style={{position: 'relative'}} ref={gridRef}>\n\n                {/*<button onClick={handleUpdate}>Update</button>*/}\n                <div style={{position: 'absolute', top: 0, ...editorConfig}} id={'board'}>\n                    <Board style={{width: 'inherit', height: 'inherit'}}/>\n                </div>\n\n                <div\n                    style={{position: 'absolute', top: 0, ...editorConfig}}>\n                    {\n                        programList.map(p => <ActionHandler\n                            x={p.pos?.x}\n                            y={p.pos?.y}\n                            onClick={(e, attribute) => handleAttributeClick(e, attribute, p)}\n                            onAttributeClick={onAttributeClick} key={p.id}\n                            title={p.text} attributes={p.attributes}\n                            onDrag={() => handleOnDrag(p.id)} id={p.id}/>)\n                    }\n\n\n                </div>\n            </div>\n            <div id=\"overlayOne\" style={{display: overlay ? 'block' : 'none'}}>\n\n                <h4>/{selectedItem?.type}/{selectedItem?.text}</h4>\n                {/*<ul style={{listStyle: 'none', margin: 0, padding: 0}}>*/}\n                {/*    {*/}\n                {/*        selectedItem?.attributes.map(x => <li>{x.type === 'input' ? <FaShare/> :*/}\n                {/*            <FaReply/>} {x.text}</li>)*/}\n                {/*    }*/}\n                {/*</ul>*/}\n\n                <ul style={{listStyle: 'none', margin: 0, padding: 0}}>\n                    {\n                        selectedItem?.attributes.filter(x => x.type === 'input').map(x => <input key={x.id} type=\"text\" placeholder={x.text} />)\n                    }\n                </ul>\n\n                <button>Run test</button>\n\n                <div style={{position: 'fixed', bottom: 0, right: 0, margin: '.5rem'}}>\n                    <button onClick={() => setEditor(!editor)}>\n                        Edit\n                    </button>\n\n                    <button onClick={() => setOverlay(!overlay)}>\n                        Close\n                    </button>\n                </div>\n            </div>\n\n            <div id=\"overlayTwo\" style={{display: editor ? 'block' : 'none'}}>\n                <pre>{`exports.handler =  async function(event, context) {\n    console.log(\"EVENT: \" + JSON.stringify(event, null, 2))\n    return context.logStreamName\n}`}</pre>\n            </div>\n\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BoardContextProvider} from \"./contexts/board.context\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BoardContextProvider>\n            <App/>\n        </BoardContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}